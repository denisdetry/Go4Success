module.exports = {
    extends: ["prettier", "plugin:sonarjs/recommended"],
    rules: {
        "no-var": "error",
        "prefer-const": "error",
        "func-call-spacing": ["error", "never"],
        "key-spacing": ["error", { beforeColon: false, afterColon: true }],
        "no-debugger": "error",
        "no-dupe-keys": "error",
        "no-with": "error",
        eqeqeq: ["error", "always"],
        quotes: ["error", "double", { avoidEscape: true }],
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/ban-ts-comment": [
            "error",
            {
                "ts-expect-error": "allow-with-description",
                "ts-ignore": "allow-with-description",
                "ts-nocheck": "allow-with-description",
                "ts-check": "allow-with-description",
            },
        ],
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/type-annotation-spacing": [
            "error",
            {
                before: false,
                after: true,
                overrides: { arrow: { before: true } },
            },
        ],
        camelcase: "error",
        "no-duplicate-imports": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "require-await": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-misused-promises": [
            "error",
            { checksVoidReturn: false },
        ],
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/cognitive-complexity": "warn",
        "sonarjs/no-small-switch": "warn",
        "react/prefer-read-only-props": "error",
    },
    parser: "@typescript-eslint/parser",
    parserOptions: {
        project: "./tsconfig.json",
    },
    plugins: ["@typescript-eslint", "sonarjs", "react"],
};
